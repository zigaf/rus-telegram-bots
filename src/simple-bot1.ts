import { Telegraf } from 'telegraf';
import { ApiService } from './services/api.service';

export class SimpleArticleSearchBot {
  private bot: Telegraf;
  private apiService: ApiService;
  private frontendUrl: string;

  constructor(token: string, apiBaseUrl: string, frontendUrl: string) {
    this.bot = new Telegraf(token);
    this.apiService = new ApiService(apiBaseUrl);
    this.frontendUrl = frontendUrl;
    this.setupHandlers();
  }

  private setupHandlers() {
    // Start command
    this.bot.start((ctx) => {
      const welcomeMessage = `
üè• *–í—ñ—Ç–∞—î–º–æ –≤ –º–µ–¥–∏—á–Ω–æ–º—É –±–æ—Ç—ñ –†—É—Å–ª–∞–Ω–∏ –ú–æ—Å–∫–∞–ª–µ–Ω–∫–æ!*

–Ø –¥–æ–ø–æ–º–æ–∂—É –≤–∞–º –∑–Ω–∞–π—Ç–∏ –∫–æ—Ä–∏—Å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ:
‚Ä¢ –†–∞–∫ –ª–µ–≥–µ–Ω—å —Ç–∞ –π–æ–≥–æ –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫—É
‚Ä¢ –°—É—á–∞—Å–Ω—ñ –º–µ—Ç–æ–¥–∏ –ª—ñ–∫—É–≤–∞–Ω–Ω—è
‚Ä¢ –ü—Ä–æ—Ñ—ñ–ª–∞–∫—Ç–∏–∫—É –∑–∞—Ö–≤–æ—Ä—é–≤–∞–Ω—å
‚Ä¢ –•—ñ—Ä—É—Ä–≥—ñ—á–Ω—ñ –ø—Ä–æ—Ü–µ–¥—É—Ä–∏
‚Ä¢ –†–µ–∞–±—ñ–ª—ñ—Ç–∞—Ü—ñ—é –ø—ñ—Å–ª—è –ª—ñ–∫—É–≤–∞–Ω–Ω—è

üîç *–Ø–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—è:*
‚Ä¢ –ù–∞–ø–∏—à—ñ—Ç—å –∫–ª—é—á–æ–≤—ñ —Å–ª–æ–≤–∞ –¥–ª—è –ø–æ—à—É–∫—É
‚Ä¢ –Ø–∫—â–æ –Ω–µ –∑–Ω–∞–π—à–ª–∏ –ø–æ—Ç—Ä—ñ–±–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é - –Ω–∞–ø–∏—à—ñ—Ç—å "–∑–∞–ø–∏—Ç–∞—Ç–∏ –ª—ñ–∫–∞—Ä—è"

_–õ—ñ–∫–∞—Ä-–æ–Ω–∫–æ–ª–æ–≥ –†—É—Å–ª–∞–Ω–∞ –ú–æ—Å–∫–∞–ª–µ–Ω–∫–æ —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑—É—î—Ç—å—Å—è –Ω–∞ —Ç–æ—Ä–∞–∫–∞–ª—å–Ω—ñ–π —Ö—ñ—Ä—É—Ä–≥—ñ—ó —Ç–∞ –æ–Ω–∫–æ–ª–æ–≥—ñ—ó –ª–µ–≥–µ–Ω—å._
      `;

      ctx.replyWithMarkdown(welcomeMessage);
    });

    // Help command
    this.bot.help((ctx) => {
      const helpMessage = `
üìñ *–î–æ–≤—ñ–¥–∫–∞ –ø–æ –±–æ—Ç—É*

üîç *–ü–æ—à—É–∫ —Å—Ç–∞—Ç–µ–π:*
‚Ä¢ –ù–∞–ø–∏—à—ñ—Ç—å –±—É–¥—å-—è–∫–µ –ø–∏—Ç–∞–Ω–Ω—è –∞–±–æ –∫–ª—é—á–æ–≤—ñ —Å–ª–æ–≤–∞
‚Ä¢ –ù–∞–ø—Ä–∏–∫–ª–∞–¥: "—Å–∏–º–ø—Ç–æ–º–∏ —Ä–∞–∫—É", "–¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞", "–ª—ñ–∫—É–≤–∞–Ω–Ω—è"

üìã *–ö–∞—Ç–µ–≥–æ—Ä—ñ—ó —Å—Ç–∞—Ç–µ–π:*
‚Ä¢ –î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
‚Ä¢ –õ—ñ–∫—É–≤–∞–Ω–Ω—è  
‚Ä¢ –ü—Ä–æ—Ñ—ñ–ª–∞–∫—Ç–∏–∫–∞
‚Ä¢ –•—ñ—Ä—É—Ä–≥—ñ—è
‚Ä¢ –Ü–Ω–Ω–æ–≤–∞—Ü—ñ—ó
‚Ä¢ –†–µ–∞–±—ñ–ª—ñ—Ç–∞—Ü—ñ—è

‚ùì *–Ø–∫—â–æ –Ω–µ –∑–Ω–∞–π—à–ª–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—å:*
‚Ä¢ –ù–∞–ø–∏—à—ñ—Ç—å "–∑–∞–ø–∏—Ç–∞—Ç–∏ –ª—ñ–∫–∞—Ä—è"
‚Ä¢ –í–∞—à–µ –ø–∏—Ç–∞–Ω–Ω—è –±—É–¥–µ –ø–µ—Ä–µ–¥–∞–Ω–æ –¥–æ–∫—Ç–æ—Ä—É
‚Ä¢ –í–∏ –æ—Ç—Ä–∏–º–∞—î—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å

üåê *–ü–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –Ω–∞ —Å–∞–π—Ç—ñ:*
${this.frontendUrl}
      `;

      ctx.replyWithMarkdown(helpMessage);
    });

    // Text messages - search articles
    this.bot.on('text', async (ctx) => {
      const query = ctx.message.text.toLowerCase();
      
      if (query.includes('–∑–∞–ø–∏—Ç–∞—Ç–∏ –ª—ñ–∫–∞—Ä—è') || query.includes('–ª—ñ–∫–∞—Ä') || query.includes('–ø–∏—Ç–∞–Ω–Ω—è')) {
        await this.askDoctorQuestion(ctx);
        return;
      }

      await ctx.reply('üîç –®—É–∫–∞—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é...');

      try {
        const articles = await this.apiService.searchArticles(ctx.message.text);
        
        if (articles.length === 0) {
          const noResultsMessage = `
üòî *–ù–µ –∑–Ω–∞–π—à–æ–≤ —Å—Ç–∞—Ç–µ–π –∑–∞ –∑–∞–ø–∏—Ç–æ–º: "${ctx.message.text}"*

üí° *–°–ø—Ä–æ–±—É–π—Ç–µ:*
‚Ä¢ –í–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ —ñ–Ω—à—ñ –∫–ª—é—á–æ–≤—ñ —Å–ª–æ–≤–∞
‚Ä¢ –ù–∞–ø–∏—Å–∞—Ç–∏ "–∑–∞–ø–∏—Ç–∞—Ç–∏ –ª—ñ–∫–∞—Ä—è" –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ—ó –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—ó

‚ùì *–ó–∞–ø–∏—Ç–∞—Ç–∏ —É –ª—ñ–∫–∞—Ä—è* - –æ—Ç—Ä–∏–º–∞–π—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é
          `;

          ctx.replyWithMarkdown(noResultsMessage);
        } else {
          await this.sendSearchResults(ctx, articles, ctx.message.text);
        }
      } catch (error) {
        console.error('Search error:', error);
        ctx.reply('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–æ—à—É–∫—É. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.');
      }
    });
  }

  private async sendSearchResults(ctx: any, articles: any[], query: string) {
    const message = `üîç *–ó–Ω–∞–π—à–æ–≤ ${articles.length} —Å—Ç–∞—Ç–µ–π –∑–∞ –∑–∞–ø–∏—Ç–æ–º: "${query}"*\n\n`;
    
    let text = message;

    for (let i = 0; i < Math.min(articles.length, 3); i++) {
      const article = articles[i];
      text += `${i + 1}. *${article.title}*\n`;
      text += `üìÖ ${article.date} ‚Ä¢ ‚è± ${article.readTime}\n`;
      text += `üìù ${article.excerpt}\n`;
      text += `üåê –ß–∏—Ç–∞—Ç–∏: ${this.frontendUrl}/article/${article.id}\n\n`;
    }

    if (articles.length > 3) {
      text += `\n_–ü–æ–∫–∞–∑–∞–Ω–æ 3 –∑ ${articles.length} —Å—Ç–∞—Ç–µ–π. –£—Ç–æ—á–Ω—ñ—Ç—å –ø–æ—à—É–∫ –¥–ª—è –±—ñ–ª—å—à —Ç–æ—á–Ω–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤._`;
    }

    text += `\n‚ùì *–ù–µ –∑–Ω–∞–π—à–ª–∏ –ø–æ—Ç—Ä—ñ–±–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é?* –ù–∞–ø–∏—à—ñ—Ç—å "–∑–∞–ø–∏—Ç–∞—Ç–∏ –ª—ñ–∫–∞—Ä—è"`;

    await ctx.replyWithMarkdown(text);
  }

  private async askDoctorQuestion(ctx: any) {
    const message = `
‚ùì *–ó–∞–ø–∏—Ç–∞—Ç–∏ —É –ª—ñ–∫–∞—Ä—è*

–Ø–∫—â–æ –≤–∏ –Ω–µ –∑–Ω–∞–π—à–ª–∏ –ø–æ—Ç—Ä—ñ–±–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –≤ —Å—Ç–∞—Ç—Ç—è—Ö, –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–µ –ø–∏—Ç–∞–Ω–Ω—è –¥–æ–∫—Ç–æ—Ä—É –†—É—Å–ª–∞–Ω—ñ –ú–æ—Å–∫–∞–ª–µ–Ω–∫–æ.

üìù *–ù–∞–ø–∏—à—ñ—Ç—å –≤–∞—à–µ –ø–∏—Ç–∞–Ω–Ω—è:*
‚Ä¢ –û–ø–∏—à—ñ—Ç—å —Å–∏–º–ø—Ç–æ–º–∏ –∞–±–æ –ø—Ä–æ–±–ª–µ–º—É
‚Ä¢ –í–∫–∞–∂—ñ—Ç—å –≤–∞—à—ñ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ñ –¥–∞–Ω—ñ (—Ç–µ–ª–µ—Ñ–æ–Ω, email)
‚Ä¢ –î–æ–¥–∞–π—Ç–µ –±—É–¥—å-—è–∫—É –¥–æ–¥–∞—Ç–∫–æ–≤—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é

üí¨ *–ü—Ä–∏–∫–ª–∞–¥:*
"–î–æ–±—Ä–∏–π –¥–µ–Ω—å! –£ –º–µ–Ω–µ —Ç—Ä–∏–≤–∞–ª–∏–π –∫–∞—à–µ–ª—å –ø—Ä–æ—Ç—è–≥–æ–º 2 —Ç–∏–∂–Ω—ñ–≤. –ß–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –ª—ñ–∫–∞—Ä—è? –ú—ñ–π —Ç–µ–ª–µ—Ñ–æ–Ω: +380123456789"

‚è∞ *–ß–∞—Å –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ:* 24-48 –≥–æ–¥–∏–Ω
    `;

    await ctx.replyWithMarkdown(message);

    // Set up question handler
    this.bot.on('text', async (questionCtx) => {
      if (questionCtx.message.text.startsWith('/')) return;
      
      const question = questionCtx.message.text;
      const user = questionCtx.from;
      
      // Send to doctor channel via bot2
      await this.sendQuestionToDoctor(user, question);
      
      await questionCtx.reply('‚úÖ *–í–∞—à–µ –ø–∏—Ç–∞–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –ª—ñ–∫–∞—Ä—é!*\n\n‚è∞ –í–∏ –æ—Ç—Ä–∏–º–∞—î—Ç–µ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –ø—Ä–æ—Ç—è–≥–æ–º 24-48 –≥–æ–¥–∏–Ω.\n\nüí° –ê –ø–æ–∫–∏ —â–æ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∫–æ—Ä–∏—Å–Ω—ñ —Å—Ç–∞—Ç—Ç—ñ –Ω–∞ —Å–∞–π—Ç—ñ.');
    });
  }

  private async sendQuestionToDoctor(user: any, question: string) {
    // This will be handled by bot2 integration
    console.log('Question from user:', { user, question });
    // TODO: Send to doctor channel via bot2
  }

  public launch() {
    this.bot.launch();
    console.log('ü§ñ Simple Article Search Bot started');
  }

  public stop() {
    this.bot.stop();
  }
}
